name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - feature/**

concurrency:
  group: ${{format('{0}:{1}', github.repository, github.ref)}}
  cancel-in-progress: true

env:
  GIT_FETCH_JOBS: 8
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: gcc-4.7
            cxxstd: "03,11"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: g++-4.7
          - toolset: gcc-4.8
            cxxstd: "03,11"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: g++-4.8
          - toolset: gcc-4.9
            cxxstd: "03,11"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: g++-4.9
          - toolset: gcc-5
            cxxstd: "03,11,14,1z"
            os: ubuntu-20.04
            container: ubuntu:16.04
          - toolset: gcc-6
            cxxstd: "03,11,14,1z"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: g++-6
          - toolset: gcc-7
            cxxstd: "03,11,14,17"
            os: ubuntu-18.04
          - toolset: gcc-8
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-18.04
            install: g++-8
          - toolset: gcc-9
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-18.04
          - toolset: gcc-10
            cxxstd: "03,11,14,17,20"
            os: ubuntu-20.04
          - toolset: gcc-11
            cxxstd: "03,11,14,17,20"
            os: ubuntu-20.04
            install: g++-11
          - toolset: clang
            compiler: clang++-3.5
            cxxstd: "03,11"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: clang-3.5
          - toolset: clang
            compiler: clang++-3.6
            cxxstd: "03,11,14"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: clang-3.6
          - toolset: clang
            compiler: clang++-3.7
            cxxstd: "03,11,14"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: clang-3.7
          - toolset: clang
            compiler: clang++-3.8
            cxxstd: "03,11,14"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: clang-3.8
          - toolset: clang
            compiler: clang++-3.9
            cxxstd: "03,11,14"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: clang-3.9
          - toolset: clang
            compiler: clang++-4.0
            cxxstd: "03,11,14"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: clang-4.0
          - toolset: clang
            compiler: clang++-5.0
            cxxstd: "03,11,14,1z"
            os: ubuntu-20.04
            container: ubuntu:16.04
            install: clang-5.0
          - toolset: clang
            compiler: clang++-6.0
            cxxstd: "03,11,14,17"
            os: ubuntu-18.04
            install: clang-6.0
          - toolset: clang
            compiler: clang++-7
            cxxstd: "03,11,14,17"
            os: ubuntu-18.04
            install: clang-7
          - toolset: clang
            compiler: clang++-8
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-18.04
            install: clang-8
            gcc_toolchain: 7
          - toolset: clang
            compiler: clang++-9
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-20.04
            install: clang-9
          - toolset: clang
            compiler: clang++-10
            cxxstd: "03,11,14,17,20"
            os: ubuntu-20.04
          - toolset: clang
            compiler: clang++-11
            cxxstd: "03,11,14,17,20"
            os: ubuntu-20.04
          - toolset: clang
            compiler: clang++-12
            cxxstd: "03,11,14,17,20"
            os: ubuntu-20.04
          - toolset: clang
            cxxstd: "03,11,14,17,2a"
            os: macos-10.15

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - name: Check if running in container
        if: matrix.container != ''
        run: echo "GHA_CONTAINER=${{ matrix.container }}" >> $GITHUB_ENV
      - name: If running in container, upgrade packages
        if: matrix.container != ''
        run: |
            apt-get -o Acquire::Retries=3 update && DEBIAN_FRONTEND=noninteractive apt-get -y install tzdata && apt-get -o Acquire::Retries=3 install -y sudo software-properties-common wget curl apt-transport-https make apt-file sudo unzip libssl-dev build-essential autotools-dev autoconf automake g++ libc++-helpers python ruby cpio gcc-multilib g++-multilib pkgconf python3 ccache libpython-dev
            sudo apt-add-repository ppa:git-core/ppa
            sudo apt-get -o Acquire::Retries=3 update && apt-get -o Acquire::Retries=3 -y install git
            python_version=$(python3 -c 'import sys; print("{0.major}.{0.minor}".format(sys.version_info))')
            sudo wget https://bootstrap.pypa.io/pip/$python_version/get-pip.py
            sudo python3 get-pip.py
            sudo /usr/local/bin/pip install cmake
      - uses: actions/checkout@v2

      - name: Install packages
        if: matrix.install
        run: |
          for i in {1..3}; do sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test" && break || sleep 2; done
          sudo apt-get update
          sudo apt-get install -y ${{matrix.install}}

      - name: Setup GCC Toolchain
        if: matrix.gcc_toolchain
        run: |
          GCC_TOOLCHAIN_ROOT="$HOME/gcc-toolchain"
          echo "GCC_TOOLCHAIN_ROOT=\"$GCC_TOOLCHAIN_ROOT\"" >> $GITHUB_ENV
          MULTIARCH_TRIPLET="$(dpkg-architecture -qDEB_HOST_MULTIARCH)"
          mkdir -p "$GCC_TOOLCHAIN_ROOT"
          ln -s /usr/include "$GCC_TOOLCHAIN_ROOT/include"
          ln -s /usr/bin "$GCC_TOOLCHAIN_ROOT/bin"
          mkdir -p "$GCC_TOOLCHAIN_ROOT/lib/gcc/$MULTIARCH_TRIPLET"
          ln -s "/usr/lib/gcc/$MULTIARCH_TRIPLET/${{matrix.gcc_toolchain}}" "$GCC_TOOLCHAIN_ROOT/lib/gcc/$MULTIARCH_TRIPLET/${{matrix.gcc_toolchain}}"

      - name: Setup Boost
        run: |
          echo GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          LIBRARY=${GITHUB_REPOSITORY#*/}
          echo LIBRARY: $LIBRARY
          echo "LIBRARY=$LIBRARY" >> $GITHUB_ENV
          echo GITHUB_BASE_REF: $GITHUB_BASE_REF
          echo GITHUB_REF: $GITHUB_REF
          REF=${GITHUB_BASE_REF:-$GITHUB_REF}
          REF=${REF#refs/heads/}
          echo REF: $REF
          BOOST_BRANCH=develop && [ "$REF" == "master" ] && BOOST_BRANCH=master || true
          echo BOOST_BRANCH: $BOOST_BRANCH
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          mkdir -p libs/$LIBRARY
          cp -r $GITHUB_WORKSPACE/* libs/$LIBRARY
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs $GIT_FETCH_JOBS" $LIBRARY
          ./bootstrap.sh
          ./b2 -d0 headers

      - name: Create user-config.jam
        if: matrix.compiler
        run: |
          echo -n "using ${{matrix.toolset}} : : ${{matrix.compiler}}" > ~/user-config.jam
          if [ -n "$GCC_TOOLCHAIN_ROOT" ]
          then
            echo -n " : <compileflags>\"--gcc-toolchain=$GCC_TOOLCHAIN_ROOT\" <linkflags>\"--gcc-toolchain=$GCC_TOOLCHAIN_ROOT\"" >> ~/user-config.jam
          fi
          echo " ;" >> ~/user-config.jam

      - name: Run tests
        run: |
          BUILD_JOBS=$( (nproc || sysctl -n hw.ncpu) 2> /dev/null )
          cd ../boost-root
          ./b2 -j $BUILD_JOBS libs/$LIBRARY/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} variant=debug,release

  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: msvc-14.1
            cxxstd: "14,17,latest"
            addrmd: 32,64
            os: windows-2016
          - toolset: msvc-14.2
            cxxstd: "14,17,latest"
            addrmd: 32,64
            os: windows-2019
          - toolset: gcc
            cxxstd: "03,11,14,17,2a"
            addrmd: 64
            os: windows-2019

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Boost
        shell: cmd
        run: |
          echo GITHUB_REPOSITORY: %GITHUB_REPOSITORY%
          for /f %%i in ("%GITHUB_REPOSITORY%") do set LIBRARY=%%~nxi
          echo LIBRARY: %LIBRARY%
          echo LIBRARY=%LIBRARY%>>%GITHUB_ENV%
          echo GITHUB_BASE_REF: %GITHUB_BASE_REF%
          echo GITHUB_REF: %GITHUB_REF%
          if "%GITHUB_BASE_REF%" == "" set GITHUB_BASE_REF=%GITHUB_REF%
          set BOOST_BRANCH=develop
          for /f %%i in ("%GITHUB_BASE_REF%") do if "%%~nxi" == "master" set BOOST_BRANCH=master
          echo BOOST_BRANCH: %BOOST_BRANCH%
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\%LIBRARY%\
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs %GIT_FETCH_JOBS%" %LIBRARY%
          cmd /c bootstrap
          b2 -d0 headers

      - name: Run tests
        shell: cmd
        run: |
          cd ../boost-root
          b2 -j %NUMBER_OF_PROCESSORS% libs/%LIBRARY%/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} address-model=${{matrix.addrmd}} variant=debug,release
